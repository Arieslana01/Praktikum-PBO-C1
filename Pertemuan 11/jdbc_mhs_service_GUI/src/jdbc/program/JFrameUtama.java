/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jdbc.program;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import jdbc.model.Mahasiswa;
import jdbc.service.MysqlMahasiswaService;
import jdbc.service.*;
import jdbc.utilities.MysqlUtility;
import static jdbc.utilities.MysqlUtility.getConnection;
/**
 *
 * @author apple
 */
public class JFrameUtama extends javax.swing.JFrame {
    private MysqlMahasiswaService service;
    /**
     * Creates new form JFrameUtama
     */
    public JFrameUtama() throws SQLException {
        initComponents();
        service = new MysqlMahasiswaService();
        loadMahasiswaList();
        jListId.addListSelectionListener(e -> updateTextFieldsFromList());
        jListNama.addListSelectionListener(e -> updateTextFieldsFromList());
    }
     
    private void loadMahasiswaList() throws SQLException {
        DefaultListModel<String> namaModel = new DefaultListModel<>();
        DefaultListModel<String> idModel = new DefaultListModel<>();
        List<Mahasiswa> mahasiswaList = service.getAll();
        for (Mahasiswa mhs : mahasiswaList) {
            namaModel.addElement(mhs.getNama());
            idModel.addElement(String.valueOf(mhs.getId()));
        }

        jListNama.setModel(namaModel);
        jListId.setModel(idModel);

    }

    private void updateTextFieldsFromList() {
        int index = jListId.getSelectedIndex();
        if (index != -1) {
            // Add size checks to prevent index out of bounds exceptions
            DefaultListModel<String> idModel = (DefaultListModel<String>) jListId.getModel();
            DefaultListModel<String> namaModel = (DefaultListModel<String>) jListNama.getModel();

            if (index < idModel.getSize() && index < namaModel.getSize()) {
                String selectedId = jListId.getModel().getElementAt(index);
                String selectedName = jListNama.getModel().getElementAt(index);

                jTextFieldEditId.setText(selectedId);
                jTextFieldEditNama.setText(selectedName);
                jTextFieldHapusId.setText(selectedId);
                jTextFieldHapusNama.setText(selectedName);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListId = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListNama = new javax.swing.JList<>();
        jLabelId = new javax.swing.JLabel();
        jLabelNamaId = new javax.swing.JLabel();
        jLabelKelola = new javax.swing.JLabel();
        jButtonAmbil = new javax.swing.JButton();
        jLabelNama = new javax.swing.JLabel();
        jTextFieldNama = new javax.swing.JTextField();
        jButtonTambahkan = new javax.swing.JButton();
        jTextFieldEditId = new javax.swing.JTextField();
        jTextFieldEditNama = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jTextFieldHapusId = new javax.swing.JTextField();
        jTextFieldHapusNama = new javax.swing.JTextField();
        jButtonHapus = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListId.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListId);

        jListNama.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListNama);

        jLabelId.setText("Id");

        jLabelNamaId.setText("Nama");

        jLabelKelola.setFont(new java.awt.Font("Baskerville", 1, 14)); // NOI18N
        jLabelKelola.setText("Kelola Data Mahasiswa");

        jButtonAmbil.setText("Ambil Semua Data");
        jButtonAmbil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAmbilActionPerformed(evt);
            }
        });

        jLabelNama.setText("Nama");

        jTextFieldNama.setText("Masukan nama disini..");

        jButtonTambahkan.setText("Tambahkan");
        jButtonTambahkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahkanActionPerformed(evt);
            }
        });

        jTextFieldEditId.setText("Id");
        jTextFieldEditId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEditIdActionPerformed(evt);
            }
        });

        jTextFieldEditNama.setText("Nama");

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jTextFieldHapusId.setText("Id");
        jTextFieldHapusId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHapusIdActionPerformed(evt);
            }
        });

        jTextFieldHapusNama.setText("Nama");
        jTextFieldHapusNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHapusNamaActionPerformed(evt);
            }
        });

        jButtonHapus.setText("Hapus");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset Indeks");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabelId)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNamaId)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldHapusId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(jTextFieldEditId, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEditNama)
                            .addComponent(jTextFieldHapusNama))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHapus))
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelKelola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAmbil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabelNama)
                            .addComponent(jTextFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonTambahkan))
                        .addContainerGap(55, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jLabelNamaId)
                    .addComponent(jLabelKelola))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAmbil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jButtonTambahkan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEditId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEditNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEdit))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonHapus)
                            .addComponent(jTextFieldHapusNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldHapusId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jButtonReset)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
                String idStr = jTextFieldEditId.getText();
        String nama = jTextFieldEditNama.getText();

        if (idStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(idStr);
            Mahasiswa mhs = new Mahasiswa();
            mhs.setId(id);
            mhs.setNama(nama);

            service.update(mhs);
            loadMahasiswaList(); // Reload the list after updating an item

            // Optional: Show success message
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameUtama.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error updating mahasiswa: " + ex.getMessage(), "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        String idStr = jTextFieldHapusId.getText();

        if (idStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(idStr);
            service.delete(id);
            loadMahasiswaList(); // Reload the list after deleting an item
            jTextFieldHapusId.setText("");
            jTextFieldHapusNama.setText("");
            jTextFieldEditId.setText("");
            jTextFieldEditNama.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameUtama.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jTextFieldHapusNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHapusNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHapusNamaActionPerformed

    private void jTextFieldHapusIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHapusIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHapusIdActionPerformed

    private void jTextFieldEditIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEditIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEditIdActionPerformed

    private void jButtonAmbilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAmbilActionPerformed
        try {
            // TODO add your handling code here:
            loadMahasiswaList();
        } catch (SQLException ex) {
            Logger.getLogger(JFrameUtama.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAmbilActionPerformed

    private void jButtonTambahkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahkanActionPerformed

        String nama = jTextFieldNama.getText();
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            Mahasiswa m = new Mahasiswa();
            m.setNama(nama);

            service.add(m);
            loadMahasiswaList();
            jTextFieldNama.setText("");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error adding mahasiswa", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonTambahkanActionPerformed

    private void jButtonResetIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetIndexActionPerformed
        // TODO add your handling code here:
        try {
            service.indexReset();
            loadMahasiswaList();
            // Add a success message
            JOptionPane.showMessageDialog(this,
                    "Indeks berhasil direset. ID untuk data baru akan dimulai dari 1.",
                    "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Error resetting index: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonResetIndexActionPerformed
    
    private void jListNamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListNamaMouseClicked
        // TODO add your handling code here:
        // Ambil index item yang diklik
        int index = jListNama.locationToIndex(evt.getPoint());

        if (index != -1) {
            // Ambil nilai (nama) dari list berdasarkan index
            String nama = jListNama.getModel().getElementAt(index);

            // Misalnya, tampilkan di TextField
            jTextFieldNama.setText(nama);

            // (Opsional) Cetak index dan nama ke console
            System.out.println("Index: " + index + ", Nama: " + nama);
        }
    }//GEN-LAST:event_jListNamaMouseClicked
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new JFrameUtama().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(JFrameUtama.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAmbil;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonTambahkan;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelKelola;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelNamaId;
    private javax.swing.JList<String> jListId;
    private javax.swing.JList<String> jListNama;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldEditId;
    private javax.swing.JTextField jTextFieldEditNama;
    private javax.swing.JTextField jTextFieldHapusId;
    private javax.swing.JTextField jTextFieldHapusNama;
    private javax.swing.JTextField jTextFieldNama;
    // End of variables declaration//GEN-END:variables
}
